// <auto-generated />
using System;
using ComicStoreDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComicStoreDb.Migrations
{
    [DbContext(typeof(ComicsContext))]
    partial class ComicsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComicStoreDb.Classes.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birth");

                    b.Property<string>("Name");

                    b.Property<int?>("NationalityId");

                    b.HasKey("Id");

                    b.HasIndex("NationalityId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("ComicStoreDb.Classes.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ComicStoreDb.Classes.Comic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<int>("Pages");

                    b.Property<DateTime>("PublicationDate");

                    b.Property<int?>("PublishingHouseId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PublishingHouseId");

                    b.ToTable("Comics");
                });

            modelBuilder.Entity("ComicStoreDb.Classes.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ComicStoreDb.Classes.Function", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId");

                    b.Property<int?>("ComicId");

                    b.Property<string>("Role");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ComicId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("ComicStoreDb.Classes.PublishingHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("PublishingHouses");
                });

            modelBuilder.Entity("ComicStoreDb.Classes.Author", b =>
                {
                    b.HasOne("ComicStoreDb.Classes.Country", "Nationality")
                        .WithMany("Authors")
                        .HasForeignKey("NationalityId");
                });

            modelBuilder.Entity("ComicStoreDb.Classes.Comic", b =>
                {
                    b.HasOne("ComicStoreDb.Classes.Category", "Category")
                        .WithMany("Comics")
                        .HasForeignKey("CategoryId");

                    b.HasOne("ComicStoreDb.Classes.PublishingHouse", "PublishingHouse")
                        .WithMany("Comics")
                        .HasForeignKey("PublishingHouseId");
                });

            modelBuilder.Entity("ComicStoreDb.Classes.Function", b =>
                {
                    b.HasOne("ComicStoreDb.Classes.Author", "Author")
                        .WithMany("Functions")
                        .HasForeignKey("AuthorId");

                    b.HasOne("ComicStoreDb.Classes.Comic", "Comic")
                        .WithMany("Functions")
                        .HasForeignKey("ComicId");
                });

            modelBuilder.Entity("ComicStoreDb.Classes.PublishingHouse", b =>
                {
                    b.HasOne("ComicStoreDb.Classes.Country", "Country")
                        .WithMany("PublishingHouses")
                        .HasForeignKey("CountryId");
                });
#pragma warning restore 612, 618
        }
    }
}
